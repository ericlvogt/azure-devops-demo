name: build
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Tells Azure what will trigger this pipeline
# main means when there is code checked into the main branch
# of the repository then trigger build
trigger:
- main

# Build agent image to use to build the code
pool:
  vmImage: windows-latest

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- script: choco install windows-sdk-10-version-2004-all
  displayName: 'Install windows SDK 10'
- task: UseDotNet@2
  displayName: 'Install .NET 6 SDK'
  inputs:
    version: '6.x'
    performMultiLevelLookup: true
    includePreviewVersions: true
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    configuration: '$(buildConfiguration)'
    platform: '$(buildPlatform)'
    solution: '**/*.sln'

- task: VSTest@2
  inputs:
    configuration: '$(buildConfiguration)'
    testFiltercriteria: '**/*.Test.dll'

# dotnet build and dotnet test are not supported when using Windows 10 SDK
# - task: DotNetCoreCLI@2
#   displayName: Build
#   inputs:
#    command: build
#    projects: '**/*.csproj'
#    arguments: '/p:Platform=$(buildPlatform) --configuration $(buildConfiguration)'
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'
# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
# - task: DotNetCoreCLI@2
#   displayName: Test
#   inputs:
#     command: test
#     projects: '**/*Test.csproj'
#     arguments: '--configuration $(buildConfiguration)'